//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_Rcpt_Usr", "Usr", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.Usr), "Rcpt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.Rcpt))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_Rcpt_Usr1", "Usr", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.Usr), "Rcpt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.Rcpt))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptBuys_Receipts", "Rcpt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.Rcpt), "RcptBuy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.RcptBuy), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsSubscriptions_Receipts", "Rcpt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.Rcpt), "RcptSub", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.RcptSub), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_RcptBuy_UsrCus", "UsrCus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.UsrCus), "RcptBuy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.RcptBuy))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.RcptBuy), "RcptBuySta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.RcptBuySta))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuySta", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.RcptBuySta), "RcptBuyStaDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.RcptBuyStaDet), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptStaStep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.RcptStaStep), "RcptBuyStaDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.RcptBuyStaDet), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_SubscriptionsDetails_Subscriptions", "Sub", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.Sub), "SubDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.SubDet), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_SubscriptionsDetails_UsersMerchants", "UsrMer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.UsrMer), "SubDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.SubDet), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomers_Users", "Usr", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.Usr), "UsrCus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrCus), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsersMerchants_Users", "Usr", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.Usr), "UsrMer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMer), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMstr_Usr", "Usr", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.Usr), "UsrMstr", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMstr), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCarts_UsersCustomers", "UsrCus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrCus), "UsrCusCart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrCusCart))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCart", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.UsrCusCart), "UsrCusCartDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrCusCartDet), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrMerShpPro", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.UsrMerShpPro), "UsrCusCartDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrCusCartDet), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShp_UsrMer", "UsrMer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMer), "UsrMerShp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMerShp))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.UsrMerShp), "UsrMerShpPro", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMerShpPro), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpPro_Brand", "UsrMerShpProBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMerShpProBrand), "UsrMerShpPro", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMerShpPro))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpProCat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMerShpProCat), "UsrMerShpPro", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMerShpPro))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpPro", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAO.UsrMerShpPro), "UsrMerShpProDet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMerShpProDet), true)]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProColor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMerShpProColor), "UsrMerShpProDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMerShpProDet))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProSize", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMerShpProSize), "UsrMerShpProDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMerShpProDet))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "FK_UsrMstr_UsrMstrRole", "UsrMstrRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAO.UsrMstrRole), "UsrMstr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMstr))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "RcptBuyDet", "RcptBuy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.RcptBuy), "UsrMerShpPro", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.UsrMerShpPro))]
[assembly: EdmRelationshipAttribute("ECOMM_C2C_SUBModel", "RcptSubDet", "RcptSub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.RcptSub), "SubDet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAO.SubDet))]

#endregion

namespace DAO
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ECOMM_C2C_SUBDBContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ECOMM_C2C_SUBDBContext object using the connection string found in the 'ECOMM_C2C_SUBDBContext' section of the application configuration file.
        /// </summary>
        public ECOMM_C2C_SUBDBContext() : base("name=ECOMM_C2C_SUBDBContext", "ECOMM_C2C_SUBDBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ECOMM_C2C_SUBDBContext object.
        /// </summary>
        public ECOMM_C2C_SUBDBContext(string connectionString) : base(connectionString, "ECOMM_C2C_SUBDBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ECOMM_C2C_SUBDBContext object.
        /// </summary>
        public ECOMM_C2C_SUBDBContext(EntityConnection connection) : base(connection, "ECOMM_C2C_SUBDBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rcpt> Rcpt
        {
            get
            {
                if ((_Rcpt == null))
                {
                    _Rcpt = base.CreateObjectSet<Rcpt>("Rcpt");
                }
                return _Rcpt;
            }
        }
        private ObjectSet<Rcpt> _Rcpt;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RcptBuy> RcptBuy
        {
            get
            {
                if ((_RcptBuy == null))
                {
                    _RcptBuy = base.CreateObjectSet<RcptBuy>("RcptBuy");
                }
                return _RcptBuy;
            }
        }
        private ObjectSet<RcptBuy> _RcptBuy;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RcptBuySta> RcptBuySta
        {
            get
            {
                if ((_RcptBuySta == null))
                {
                    _RcptBuySta = base.CreateObjectSet<RcptBuySta>("RcptBuySta");
                }
                return _RcptBuySta;
            }
        }
        private ObjectSet<RcptBuySta> _RcptBuySta;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RcptBuyStaDet> RcptBuyStaDet
        {
            get
            {
                if ((_RcptBuyStaDet == null))
                {
                    _RcptBuyStaDet = base.CreateObjectSet<RcptBuyStaDet>("RcptBuyStaDet");
                }
                return _RcptBuyStaDet;
            }
        }
        private ObjectSet<RcptBuyStaDet> _RcptBuyStaDet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RcptStaStep> RcptStaStep
        {
            get
            {
                if ((_RcptStaStep == null))
                {
                    _RcptStaStep = base.CreateObjectSet<RcptStaStep>("RcptStaStep");
                }
                return _RcptStaStep;
            }
        }
        private ObjectSet<RcptStaStep> _RcptStaStep;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RcptSub> RcptSub
        {
            get
            {
                if ((_RcptSub == null))
                {
                    _RcptSub = base.CreateObjectSet<RcptSub>("RcptSub");
                }
                return _RcptSub;
            }
        }
        private ObjectSet<RcptSub> _RcptSub;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sub> Sub
        {
            get
            {
                if ((_Sub == null))
                {
                    _Sub = base.CreateObjectSet<Sub>("Sub");
                }
                return _Sub;
            }
        }
        private ObjectSet<Sub> _Sub;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubDet> SubDet
        {
            get
            {
                if ((_SubDet == null))
                {
                    _SubDet = base.CreateObjectSet<SubDet>("SubDet");
                }
                return _SubDet;
            }
        }
        private ObjectSet<SubDet> _SubDet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Usr> Usr
        {
            get
            {
                if ((_Usr == null))
                {
                    _Usr = base.CreateObjectSet<Usr>("Usr");
                }
                return _Usr;
            }
        }
        private ObjectSet<Usr> _Usr;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrCus> UsrCus
        {
            get
            {
                if ((_UsrCus == null))
                {
                    _UsrCus = base.CreateObjectSet<UsrCus>("UsrCus");
                }
                return _UsrCus;
            }
        }
        private ObjectSet<UsrCus> _UsrCus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrCusCart> UsrCusCart
        {
            get
            {
                if ((_UsrCusCart == null))
                {
                    _UsrCusCart = base.CreateObjectSet<UsrCusCart>("UsrCusCart");
                }
                return _UsrCusCart;
            }
        }
        private ObjectSet<UsrCusCart> _UsrCusCart;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrCusCartDet> UsrCusCartDet
        {
            get
            {
                if ((_UsrCusCartDet == null))
                {
                    _UsrCusCartDet = base.CreateObjectSet<UsrCusCartDet>("UsrCusCartDet");
                }
                return _UsrCusCartDet;
            }
        }
        private ObjectSet<UsrCusCartDet> _UsrCusCartDet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMer> UsrMer
        {
            get
            {
                if ((_UsrMer == null))
                {
                    _UsrMer = base.CreateObjectSet<UsrMer>("UsrMer");
                }
                return _UsrMer;
            }
        }
        private ObjectSet<UsrMer> _UsrMer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMerShp> UsrMerShp
        {
            get
            {
                if ((_UsrMerShp == null))
                {
                    _UsrMerShp = base.CreateObjectSet<UsrMerShp>("UsrMerShp");
                }
                return _UsrMerShp;
            }
        }
        private ObjectSet<UsrMerShp> _UsrMerShp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMerShpPro> UsrMerShpPro
        {
            get
            {
                if ((_UsrMerShpPro == null))
                {
                    _UsrMerShpPro = base.CreateObjectSet<UsrMerShpPro>("UsrMerShpPro");
                }
                return _UsrMerShpPro;
            }
        }
        private ObjectSet<UsrMerShpPro> _UsrMerShpPro;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMerShpProBrand> UsrMerShpProBrand
        {
            get
            {
                if ((_UsrMerShpProBrand == null))
                {
                    _UsrMerShpProBrand = base.CreateObjectSet<UsrMerShpProBrand>("UsrMerShpProBrand");
                }
                return _UsrMerShpProBrand;
            }
        }
        private ObjectSet<UsrMerShpProBrand> _UsrMerShpProBrand;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMerShpProCat> UsrMerShpProCat
        {
            get
            {
                if ((_UsrMerShpProCat == null))
                {
                    _UsrMerShpProCat = base.CreateObjectSet<UsrMerShpProCat>("UsrMerShpProCat");
                }
                return _UsrMerShpProCat;
            }
        }
        private ObjectSet<UsrMerShpProCat> _UsrMerShpProCat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMerShpProColor> UsrMerShpProColor
        {
            get
            {
                if ((_UsrMerShpProColor == null))
                {
                    _UsrMerShpProColor = base.CreateObjectSet<UsrMerShpProColor>("UsrMerShpProColor");
                }
                return _UsrMerShpProColor;
            }
        }
        private ObjectSet<UsrMerShpProColor> _UsrMerShpProColor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMerShpProDet> UsrMerShpProDet
        {
            get
            {
                if ((_UsrMerShpProDet == null))
                {
                    _UsrMerShpProDet = base.CreateObjectSet<UsrMerShpProDet>("UsrMerShpProDet");
                }
                return _UsrMerShpProDet;
            }
        }
        private ObjectSet<UsrMerShpProDet> _UsrMerShpProDet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMerShpProSize> UsrMerShpProSize
        {
            get
            {
                if ((_UsrMerShpProSize == null))
                {
                    _UsrMerShpProSize = base.CreateObjectSet<UsrMerShpProSize>("UsrMerShpProSize");
                }
                return _UsrMerShpProSize;
            }
        }
        private ObjectSet<UsrMerShpProSize> _UsrMerShpProSize;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMstr> UsrMstr
        {
            get
            {
                if ((_UsrMstr == null))
                {
                    _UsrMstr = base.CreateObjectSet<UsrMstr>("UsrMstr");
                }
                return _UsrMstr;
            }
        }
        private ObjectSet<UsrMstr> _UsrMstr;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsrMstrRole> UsrMstrRole
        {
            get
            {
                if ((_UsrMstrRole == null))
                {
                    _UsrMstrRole = base.CreateObjectSet<UsrMstrRole>("UsrMstrRole");
                }
                return _UsrMstrRole;
            }
        }
        private ObjectSet<UsrMstrRole> _UsrMstrRole;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rcpt EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRcpt(Rcpt rcpt)
        {
            base.AddObject("Rcpt", rcpt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RcptBuy EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRcptBuy(RcptBuy rcptBuy)
        {
            base.AddObject("RcptBuy", rcptBuy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RcptBuySta EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRcptBuySta(RcptBuySta rcptBuySta)
        {
            base.AddObject("RcptBuySta", rcptBuySta);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RcptBuyStaDet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRcptBuyStaDet(RcptBuyStaDet rcptBuyStaDet)
        {
            base.AddObject("RcptBuyStaDet", rcptBuyStaDet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RcptStaStep EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRcptStaStep(RcptStaStep rcptStaStep)
        {
            base.AddObject("RcptStaStep", rcptStaStep);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RcptSub EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRcptSub(RcptSub rcptSub)
        {
            base.AddObject("RcptSub", rcptSub);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sub EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSub(Sub sub)
        {
            base.AddObject("Sub", sub);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubDet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubDet(SubDet subDet)
        {
            base.AddObject("SubDet", subDet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Usr EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsr(Usr usr)
        {
            base.AddObject("Usr", usr);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrCus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrCus(UsrCus usrCus)
        {
            base.AddObject("UsrCus", usrCus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrCusCart EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrCusCart(UsrCusCart usrCusCart)
        {
            base.AddObject("UsrCusCart", usrCusCart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrCusCartDet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrCusCartDet(UsrCusCartDet usrCusCartDet)
        {
            base.AddObject("UsrCusCartDet", usrCusCartDet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMer(UsrMer usrMer)
        {
            base.AddObject("UsrMer", usrMer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMerShp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMerShp(UsrMerShp usrMerShp)
        {
            base.AddObject("UsrMerShp", usrMerShp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMerShpPro EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMerShpPro(UsrMerShpPro usrMerShpPro)
        {
            base.AddObject("UsrMerShpPro", usrMerShpPro);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMerShpProBrand EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMerShpProBrand(UsrMerShpProBrand usrMerShpProBrand)
        {
            base.AddObject("UsrMerShpProBrand", usrMerShpProBrand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMerShpProCat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMerShpProCat(UsrMerShpProCat usrMerShpProCat)
        {
            base.AddObject("UsrMerShpProCat", usrMerShpProCat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMerShpProColor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMerShpProColor(UsrMerShpProColor usrMerShpProColor)
        {
            base.AddObject("UsrMerShpProColor", usrMerShpProColor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMerShpProDet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMerShpProDet(UsrMerShpProDet usrMerShpProDet)
        {
            base.AddObject("UsrMerShpProDet", usrMerShpProDet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMerShpProSize EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMerShpProSize(UsrMerShpProSize usrMerShpProSize)
        {
            base.AddObject("UsrMerShpProSize", usrMerShpProSize);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMstr EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMstr(UsrMstr usrMstr)
        {
            base.AddObject("UsrMstr", usrMstr);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsrMstrRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsrMstrRole(UsrMstrRole usrMstrRole)
        {
            base.AddObject("UsrMstrRole", usrMstrRole);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="Rcpt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rcpt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rcpt object.
        /// </summary>
        /// <param name="rcptId">Initial value of the RcptId property.</param>
        /// <param name="dateAdd">Initial value of the DateAdd property.</param>
        public static Rcpt CreateRcpt(global::System.Int32 rcptId, global::System.DateTime dateAdd)
        {
            Rcpt rcpt = new Rcpt();
            rcpt.RcptId = rcptId;
            rcpt.DateAdd = dateAdd;
            return rcpt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RcptId
        {
            get
            {
                return _RcptId;
            }
            set
            {
                if (_RcptId != value)
                {
                    OnRcptIdChanging(value);
                    ReportPropertyChanging("RcptId");
                    _RcptId = StructuralObject.SetValidValue(value, "RcptId");
                    ReportPropertyChanged("RcptId");
                    OnRcptIdChanged();
                }
            }
        }
        private global::System.Int32 _RcptId;
        partial void OnRcptIdChanging(global::System.Int32 value);
        partial void OnRcptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private global::System.DateTime _DateAdd;
        partial void OnDateAddChanging(global::System.DateTime value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEdit
        {
            get
            {
                return _DateEdit;
            }
            set
            {
                OnDateEditChanging(value);
                ReportPropertyChanging("DateEdit");
                _DateEdit = StructuralObject.SetValidValue(value, "DateEdit");
                ReportPropertyChanged("DateEdit");
                OnDateEditChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEdit;
        partial void OnDateEditChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEditChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_Rcpt_Usr", "Usr")]
        public Usr Usr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr", "Usr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr", "Usr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usr> UsrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr", "Usr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr", "Usr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_Rcpt_Usr1", "Usr")]
        public Usr Usr1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr1", "Usr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr1", "Usr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usr> Usr1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr1", "Usr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr1", "Usr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptBuys_Receipts", "RcptBuy")]
        public RcptBuy RcptBuy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "RcptBuy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "RcptBuy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RcptBuy> RcptBuyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "RcptBuy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "RcptBuy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsSubscriptions_Receipts", "RcptSub")]
        public RcptSub RcptSub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptSub>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "RcptSub").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptSub>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "RcptSub").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RcptSub> RcptSubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptSub>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "RcptSub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RcptSub>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "RcptSub", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="RcptBuy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RcptBuy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RcptBuy object.
        /// </summary>
        /// <param name="rcptBuyId">Initial value of the RcptBuyId property.</param>
        public static RcptBuy CreateRcptBuy(global::System.Int32 rcptBuyId)
        {
            RcptBuy rcptBuy = new RcptBuy();
            rcptBuy.RcptBuyId = rcptBuyId;
            return rcptBuy;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RcptBuyId
        {
            get
            {
                return _RcptBuyId;
            }
            set
            {
                if (_RcptBuyId != value)
                {
                    OnRcptBuyIdChanging(value);
                    ReportPropertyChanging("RcptBuyId");
                    _RcptBuyId = StructuralObject.SetValidValue(value, "RcptBuyId");
                    ReportPropertyChanged("RcptBuyId");
                    OnRcptBuyIdChanged();
                }
            }
        }
        private global::System.Int32 _RcptBuyId;
        partial void OnRcptBuyIdChanging(global::System.Int32 value);
        partial void OnRcptBuyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptBuys_Receipts", "Rcpt")]
        public Rcpt Rcpt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "Rcpt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "Rcpt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rcpt> RcptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "Rcpt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptBuys_Receipts", "Rcpt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_RcptBuy_UsrCus", "UsrCus")]
        public UsrCus UsrCus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_RcptBuy_UsrCus", "UsrCus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_RcptBuy_UsrCus", "UsrCus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrCus> UsrCusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_RcptBuy_UsrCus", "UsrCus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_RcptBuy_UsrCus", "UsrCus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuySta")]
        public EntityCollection<RcptBuySta> RcptBuySta
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RcptBuySta>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuySta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RcptBuySta>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuySta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "RcptBuyDet", "UsrMerShpPro")]
        public EntityCollection<UsrMerShpPro> UsrMerShpPro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.RcptBuyDet", "UsrMerShpPro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.RcptBuyDet", "UsrMerShpPro", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="RcptBuySta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RcptBuySta : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RcptBuySta object.
        /// </summary>
        /// <param name="staId">Initial value of the StaId property.</param>
        public static RcptBuySta CreateRcptBuySta(global::System.Int32 staId)
        {
            RcptBuySta rcptBuySta = new RcptBuySta();
            rcptBuySta.StaId = staId;
            return rcptBuySta;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StaId
        {
            get
            {
                return _StaId;
            }
            set
            {
                if (_StaId != value)
                {
                    OnStaIdChanging(value);
                    ReportPropertyChanging("StaId");
                    _StaId = StructuralObject.SetValidValue(value, "StaId");
                    ReportPropertyChanged("StaId");
                    OnStaIdChanged();
                }
            }
        }
        private global::System.Int32 _StaId;
        partial void OnStaIdChanging(global::System.Int32 value);
        partial void OnStaIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuy")]
        public RcptBuy RcptBuy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RcptBuy> RcptBuyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RcptBuy>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStates_ReceiptsBuys", "RcptBuy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuyStaDet")]
        public EntityCollection<RcptBuyStaDet> RcptBuyStaDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RcptBuyStaDet>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuyStaDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RcptBuyStaDet>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuyStaDet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="RcptBuyStaDet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RcptBuyStaDet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RcptBuyStaDet object.
        /// </summary>
        /// <param name="staId">Initial value of the StaId property.</param>
        /// <param name="stepId">Initial value of the StepId property.</param>
        public static RcptBuyStaDet CreateRcptBuyStaDet(global::System.Int32 staId, global::System.Int32 stepId)
        {
            RcptBuyStaDet rcptBuyStaDet = new RcptBuyStaDet();
            rcptBuyStaDet.StaId = staId;
            rcptBuyStaDet.StepId = stepId;
            return rcptBuyStaDet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StaId
        {
            get
            {
                return _StaId;
            }
            set
            {
                if (_StaId != value)
                {
                    OnStaIdChanging(value);
                    ReportPropertyChanging("StaId");
                    _StaId = StructuralObject.SetValidValue(value, "StaId");
                    ReportPropertyChanged("StaId");
                    OnStaIdChanged();
                }
            }
        }
        private global::System.Int32 _StaId;
        partial void OnStaIdChanging(global::System.Int32 value);
        partial void OnStaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StepId
        {
            get
            {
                return _StepId;
            }
            set
            {
                if (_StepId != value)
                {
                    OnStepIdChanging(value);
                    ReportPropertyChanging("StepId");
                    _StepId = StructuralObject.SetValidValue(value, "StepId");
                    ReportPropertyChanged("StepId");
                    OnStepIdChanged();
                }
            }
        }
        private global::System.Int32 _StepId;
        partial void OnStepIdChanging(global::System.Int32 value);
        partial void OnStepIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDone
        {
            get
            {
                return _IsDone;
            }
            set
            {
                OnIsDoneChanging(value);
                ReportPropertyChanging("IsDone");
                _IsDone = StructuralObject.SetValidValue(value, "IsDone");
                ReportPropertyChanged("IsDone");
                OnIsDoneChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDone;
        partial void OnIsDoneChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuySta")]
        public RcptBuySta RcptBuySta
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuySta>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuySta").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuySta>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuySta").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RcptBuySta> RcptBuyStaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptBuySta>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuySta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RcptBuySta>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStates", "RcptBuySta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptStaStep")]
        public RcptStaStep RcptStaStep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptStaStep>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptStaStep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptStaStep>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptStaStep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RcptStaStep> RcptStaStepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RcptStaStep>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptStaStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RcptStaStep>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptStaStep", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="RcptStaStep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RcptStaStep : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RcptStaStep object.
        /// </summary>
        /// <param name="stepId">Initial value of the StepId property.</param>
        public static RcptStaStep CreateRcptStaStep(global::System.Int32 stepId)
        {
            RcptStaStep rcptStaStep = new RcptStaStep();
            rcptStaStep.StepId = stepId;
            return rcptStaStep;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StepId
        {
            get
            {
                return _StepId;
            }
            set
            {
                if (_StepId != value)
                {
                    OnStepIdChanging(value);
                    ReportPropertyChanging("StepId");
                    _StepId = StructuralObject.SetValidValue(value, "StepId");
                    ReportPropertyChanged("StepId");
                    OnStepIdChanged();
                }
            }
        }
        private global::System.Int32 _StepId;
        partial void OnStepIdChanging(global::System.Int32 value);
        partial void OnStepIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StepCont
        {
            get
            {
                return _StepCont;
            }
            set
            {
                OnStepContChanging(value);
                ReportPropertyChanging("StepCont");
                _StepCont = StructuralObject.SetValidValue(value, true, "StepCont");
                ReportPropertyChanged("StepCont");
                OnStepContChanged();
            }
        }
        private global::System.String _StepCont;
        partial void OnStepContChanging(global::System.String value);
        partial void OnStepContChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StepOrder
        {
            get
            {
                return _StepOrder;
            }
            set
            {
                OnStepOrderChanging(value);
                ReportPropertyChanging("StepOrder");
                _StepOrder = StructuralObject.SetValidValue(value, "StepOrder");
                ReportPropertyChanged("StepOrder");
                OnStepOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _StepOrder;
        partial void OnStepOrderChanging(Nullable<global::System.Int32> value);
        partial void OnStepOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptBuyStaDet")]
        public EntityCollection<RcptBuyStaDet> RcptBuyStaDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RcptBuyStaDet>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptBuyStaDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RcptBuyStaDet>("ECOMM_C2C_SUBModel.FK_ReceiptsBuysStatesDetails_ReceiptsBuysStatesSteps", "RcptBuyStaDet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="RcptSub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RcptSub : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RcptSub object.
        /// </summary>
        /// <param name="rcptSubId">Initial value of the RcptSubId property.</param>
        public static RcptSub CreateRcptSub(global::System.Int32 rcptSubId)
        {
            RcptSub rcptSub = new RcptSub();
            rcptSub.RcptSubId = rcptSubId;
            return rcptSub;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RcptSubId
        {
            get
            {
                return _RcptSubId;
            }
            set
            {
                if (_RcptSubId != value)
                {
                    OnRcptSubIdChanging(value);
                    ReportPropertyChanging("RcptSubId");
                    _RcptSubId = StructuralObject.SetValidValue(value, "RcptSubId");
                    ReportPropertyChanged("RcptSubId");
                    OnRcptSubIdChanged();
                }
            }
        }
        private global::System.Int32 _RcptSubId;
        partial void OnRcptSubIdChanging(global::System.Int32 value);
        partial void OnRcptSubIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_ReceiptsSubscriptions_Receipts", "Rcpt")]
        public Rcpt Rcpt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "Rcpt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "Rcpt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rcpt> RcptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "Rcpt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rcpt>("ECOMM_C2C_SUBModel.FK_ReceiptsSubscriptions_Receipts", "Rcpt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "RcptSubDet", "SubDet")]
        public EntityCollection<SubDet> SubDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubDet>("ECOMM_C2C_SUBModel.RcptSubDet", "SubDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubDet>("ECOMM_C2C_SUBModel.RcptSubDet", "SubDet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="Sub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sub : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sub object.
        /// </summary>
        /// <param name="subId">Initial value of the SubId property.</param>
        public static Sub CreateSub(global::System.Int32 subId)
        {
            Sub sub = new Sub();
            sub.SubId = subId;
            return sub;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubId
        {
            get
            {
                return _SubId;
            }
            set
            {
                if (_SubId != value)
                {
                    OnSubIdChanging(value);
                    ReportPropertyChanging("SubId");
                    _SubId = StructuralObject.SetValidValue(value, "SubId");
                    ReportPropertyChanged("SubId");
                    OnSubIdChanged();
                }
            }
        }
        private global::System.Int32 _SubId;
        partial void OnSubIdChanging(global::System.Int32 value);
        partial void OnSubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubContent
        {
            get
            {
                return _SubContent;
            }
            set
            {
                OnSubContentChanging(value);
                ReportPropertyChanging("SubContent");
                _SubContent = StructuralObject.SetValidValue(value, true, "SubContent");
                ReportPropertyChanged("SubContent");
                OnSubContentChanged();
            }
        }
        private global::System.String _SubContent;
        partial void OnSubContentChanging(global::System.String value);
        partial void OnSubContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DurDay
        {
            get
            {
                return _DurDay;
            }
            set
            {
                OnDurDayChanging(value);
                ReportPropertyChanging("DurDay");
                _DurDay = StructuralObject.SetValidValue(value, "DurDay");
                ReportPropertyChanged("DurDay");
                OnDurDayChanged();
            }
        }
        private Nullable<global::System.Int32> _DurDay;
        partial void OnDurDayChanging(Nullable<global::System.Int32> value);
        partial void OnDurDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, true, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_SubscriptionsDetails_Subscriptions", "SubDet")]
        public EntityCollection<SubDet> SubDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubDet>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_Subscriptions", "SubDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubDet>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_Subscriptions", "SubDet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="SubDet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubDet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubDet object.
        /// </summary>
        /// <param name="subId">Initial value of the SubId property.</param>
        /// <param name="merId">Initial value of the MerId property.</param>
        public static SubDet CreateSubDet(global::System.Int32 subId, global::System.Int32 merId)
        {
            SubDet subDet = new SubDet();
            subDet.SubId = subId;
            subDet.MerId = merId;
            return subDet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubId
        {
            get
            {
                return _SubId;
            }
            set
            {
                if (_SubId != value)
                {
                    OnSubIdChanging(value);
                    ReportPropertyChanging("SubId");
                    _SubId = StructuralObject.SetValidValue(value, "SubId");
                    ReportPropertyChanged("SubId");
                    OnSubIdChanged();
                }
            }
        }
        private global::System.Int32 _SubId;
        partial void OnSubIdChanging(global::System.Int32 value);
        partial void OnSubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MerId
        {
            get
            {
                return _MerId;
            }
            set
            {
                if (_MerId != value)
                {
                    OnMerIdChanging(value);
                    ReportPropertyChanging("MerId");
                    _MerId = StructuralObject.SetValidValue(value, "MerId");
                    ReportPropertyChanged("MerId");
                    OnMerIdChanged();
                }
            }
        }
        private global::System.Int32 _MerId;
        partial void OnMerIdChanging(global::System.Int32 value);
        partial void OnMerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value, "DateStart");
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStart;
        partial void OnDateStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value, "DateEnd");
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_SubscriptionsDetails_Subscriptions", "Sub")]
        public Sub Sub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sub>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_Subscriptions", "Sub").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sub>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_Subscriptions", "Sub").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sub> SubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sub>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_Subscriptions", "Sub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sub>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_Subscriptions", "Sub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_SubscriptionsDetails_UsersMerchants", "UsrMer")]
        public UsrMer UsrMer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_UsersMerchants", "UsrMer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_UsersMerchants", "UsrMer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMer> UsrMerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_UsersMerchants", "UsrMer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_UsersMerchants", "UsrMer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "RcptSubDet", "RcptSub")]
        public EntityCollection<RcptSub> RcptSub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RcptSub>("ECOMM_C2C_SUBModel.RcptSubDet", "RcptSub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RcptSub>("ECOMM_C2C_SUBModel.RcptSubDet", "RcptSub", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="Usr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usr : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Usr object.
        /// </summary>
        /// <param name="usrId">Initial value of the UsrId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateAdd">Initial value of the DateAdd property.</param>
        public static Usr CreateUsr(global::System.Int32 usrId, global::System.String userName, global::System.String login, global::System.String password, global::System.Boolean active, global::System.DateTime dateAdd)
        {
            Usr usr = new Usr();
            usr.UsrId = usrId;
            usr.UserName = userName;
            usr.Login = login;
            usr.Password = password;
            usr.Active = active;
            usr.DateAdd = dateAdd;
            return usr;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsrId
        {
            get
            {
                return _UsrId;
            }
            set
            {
                if (_UsrId != value)
                {
                    OnUsrIdChanging(value);
                    ReportPropertyChanging("UsrId");
                    _UsrId = StructuralObject.SetValidValue(value, "UsrId");
                    ReportPropertyChanged("UsrId");
                    OnUsrIdChanged();
                }
            }
        }
        private global::System.Int32 _UsrId;
        partial void OnUsrIdChanging(global::System.Int32 value);
        partial void OnUsrIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private global::System.DateTime _DateAdd;
        partial void OnDateAddChanging(global::System.DateTime value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEdit
        {
            get
            {
                return _DateEdit;
            }
            set
            {
                OnDateEditChanging(value);
                ReportPropertyChanging("DateEdit");
                _DateEdit = StructuralObject.SetValidValue(value, "DateEdit");
                ReportPropertyChanged("DateEdit");
                OnDateEditChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEdit;
        partial void OnDateEditChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEditChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_Rcpt_Usr", "Rcpt")]
        public EntityCollection<Rcpt> Rcpt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rcpt>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr", "Rcpt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rcpt>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr", "Rcpt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_Rcpt_Usr1", "Rcpt")]
        public EntityCollection<Rcpt> Rcpt1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rcpt>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr1", "Rcpt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rcpt>("ECOMM_C2C_SUBModel.FK_Rcpt_Usr1", "Rcpt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomers_Users", "UsrCus")]
        public UsrCus UsrCus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "UsrCus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "UsrCus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrCus> UsrCusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "UsrCus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "UsrCus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersMerchants_Users", "UsrMer")]
        public UsrMer UsrMer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "UsrMer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "UsrMer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMer> UsrMerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "UsrMer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "UsrMer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMstr_Usr", "UsrMstr")]
        public UsrMstr UsrMstr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMstr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "UsrMstr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMstr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "UsrMstr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMstr> UsrMstrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMstr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "UsrMstr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMstr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "UsrMstr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrCus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrCus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrCus object.
        /// </summary>
        /// <param name="cusId">Initial value of the CusId property.</param>
        public static UsrCus CreateUsrCus(global::System.Int32 cusId)
        {
            UsrCus usrCus = new UsrCus();
            usrCus.CusId = cusId;
            return usrCus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CusId
        {
            get
            {
                return _CusId;
            }
            set
            {
                if (_CusId != value)
                {
                    OnCusIdChanging(value);
                    ReportPropertyChanging("CusId");
                    _CusId = StructuralObject.SetValidValue(value, "CusId");
                    ReportPropertyChanged("CusId");
                    OnCusIdChanged();
                }
            }
        }
        private global::System.Int32 _CusId;
        partial void OnCusIdChanging(global::System.Int32 value);
        partial void OnCusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_RcptBuy_UsrCus", "RcptBuy")]
        public EntityCollection<RcptBuy> RcptBuy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RcptBuy>("ECOMM_C2C_SUBModel.FK_RcptBuy_UsrCus", "RcptBuy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RcptBuy>("ECOMM_C2C_SUBModel.FK_RcptBuy_UsrCus", "RcptBuy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomers_Users", "Usr")]
        public Usr Usr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "Usr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "Usr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usr> UsrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "Usr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersCustomers_Users", "Usr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCarts_UsersCustomers", "UsrCusCart")]
        public EntityCollection<UsrCusCart> UsrCusCart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrCusCart>("ECOMM_C2C_SUBModel.FK_UsersCustomersCarts_UsersCustomers", "UsrCusCart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrCusCart>("ECOMM_C2C_SUBModel.FK_UsersCustomersCarts_UsersCustomers", "UsrCusCart", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrCusCart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrCusCart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrCusCart object.
        /// </summary>
        /// <param name="cartId">Initial value of the CartId property.</param>
        public static UsrCusCart CreateUsrCusCart(global::System.Int32 cartId)
        {
            UsrCusCart usrCusCart = new UsrCusCart();
            usrCusCart.CartId = cartId;
            return usrCusCart;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CartId
        {
            get
            {
                return _CartId;
            }
            set
            {
                if (_CartId != value)
                {
                    OnCartIdChanging(value);
                    ReportPropertyChanging("CartId");
                    _CartId = StructuralObject.SetValidValue(value, "CartId");
                    ReportPropertyChanged("CartId");
                    OnCartIdChanged();
                }
            }
        }
        private global::System.Int32 _CartId;
        partial void OnCartIdChanging(global::System.Int32 value);
        partial void OnCartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IpAddress
        {
            get
            {
                return _IpAddress;
            }
            set
            {
                OnIpAddressChanging(value);
                ReportPropertyChanging("IpAddress");
                _IpAddress = StructuralObject.SetValidValue(value, true, "IpAddress");
                ReportPropertyChanged("IpAddress");
                OnIpAddressChanged();
            }
        }
        private global::System.String _IpAddress;
        partial void OnIpAddressChanging(global::System.String value);
        partial void OnIpAddressChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCarts_UsersCustomers", "UsrCus")]
        public UsrCus UsrCus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomersCarts_UsersCustomers", "UsrCus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomersCarts_UsersCustomers", "UsrCus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrCus> UsrCusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomersCarts_UsersCustomers", "UsrCus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrCus>("ECOMM_C2C_SUBModel.FK_UsersCustomersCarts_UsersCustomers", "UsrCus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCartDet")]
        public EntityCollection<UsrCusCartDet> UsrCusCartDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrCusCartDet>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCartDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrCusCartDet>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCartDet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrCusCartDet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrCusCartDet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrCusCartDet object.
        /// </summary>
        /// <param name="cartId">Initial value of the CartId property.</param>
        /// <param name="shpId">Initial value of the ShpId property.</param>
        /// <param name="proId">Initial value of the ProId property.</param>
        public static UsrCusCartDet CreateUsrCusCartDet(global::System.Int32 cartId, global::System.Int32 shpId, global::System.Int32 proId)
        {
            UsrCusCartDet usrCusCartDet = new UsrCusCartDet();
            usrCusCartDet.CartId = cartId;
            usrCusCartDet.ShpId = shpId;
            usrCusCartDet.ProId = proId;
            return usrCusCartDet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CartId
        {
            get
            {
                return _CartId;
            }
            set
            {
                if (_CartId != value)
                {
                    OnCartIdChanging(value);
                    ReportPropertyChanging("CartId");
                    _CartId = StructuralObject.SetValidValue(value, "CartId");
                    ReportPropertyChanged("CartId");
                    OnCartIdChanged();
                }
            }
        }
        private global::System.Int32 _CartId;
        partial void OnCartIdChanging(global::System.Int32 value);
        partial void OnCartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShpId
        {
            get
            {
                return _ShpId;
            }
            set
            {
                if (_ShpId != value)
                {
                    OnShpIdChanging(value);
                    ReportPropertyChanging("ShpId");
                    _ShpId = StructuralObject.SetValidValue(value, "ShpId");
                    ReportPropertyChanged("ShpId");
                    OnShpIdChanged();
                }
            }
        }
        private global::System.Int32 _ShpId;
        partial void OnShpIdChanging(global::System.Int32 value);
        partial void OnShpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProId
        {
            get
            {
                return _ProId;
            }
            set
            {
                if (_ProId != value)
                {
                    OnProIdChanging(value);
                    ReportPropertyChanging("ProId");
                    _ProId = StructuralObject.SetValidValue(value, "ProId");
                    ReportPropertyChanged("ProId");
                    OnProIdChanged();
                }
            }
        }
        private global::System.Int32 _ProId;
        partial void OnProIdChanging(global::System.Int32 value);
        partial void OnProIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value, "Qty");
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private Nullable<global::System.Int32> _Qty;
        partial void OnQtyChanging(Nullable<global::System.Int32> value);
        partial void OnQtyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCart")]
        public UsrCusCart UsrCusCart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCusCart>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCusCart>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrCusCart> UsrCusCartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrCusCart>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrCusCart>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersCustomersCarts", "UsrCusCart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrMerShpPro")]
        public UsrMerShpPro UsrMerShpPro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrMerShpPro").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrMerShpPro").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShpPro> UsrMerShpProReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrMerShpPro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrMerShpPro", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMer object.
        /// </summary>
        /// <param name="merId">Initial value of the MerId property.</param>
        public static UsrMer CreateUsrMer(global::System.Int32 merId)
        {
            UsrMer usrMer = new UsrMer();
            usrMer.MerId = merId;
            return usrMer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MerId
        {
            get
            {
                return _MerId;
            }
            set
            {
                if (_MerId != value)
                {
                    OnMerIdChanging(value);
                    ReportPropertyChanging("MerId");
                    _MerId = StructuralObject.SetValidValue(value, "MerId");
                    ReportPropertyChanged("MerId");
                    OnMerIdChanged();
                }
            }
        }
        private global::System.Int32 _MerId;
        partial void OnMerIdChanging(global::System.Int32 value);
        partial void OnMerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_SubscriptionsDetails_UsersMerchants", "SubDet")]
        public EntityCollection<SubDet> SubDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubDet>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_UsersMerchants", "SubDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubDet>("ECOMM_C2C_SUBModel.FK_SubscriptionsDetails_UsersMerchants", "SubDet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersMerchants_Users", "Usr")]
        public Usr Usr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "Usr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "Usr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usr> UsrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "Usr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsersMerchants_Users", "Usr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShp_UsrMer", "UsrMerShp")]
        public EntityCollection<UsrMerShp> UsrMerShp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMerShp>("ECOMM_C2C_SUBModel.FK_UsrMerShp_UsrMer", "UsrMerShp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMerShp>("ECOMM_C2C_SUBModel.FK_UsrMerShp_UsrMer", "UsrMerShp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMerShp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMerShp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMerShp object.
        /// </summary>
        /// <param name="shpId">Initial value of the ShpId property.</param>
        public static UsrMerShp CreateUsrMerShp(global::System.Int32 shpId)
        {
            UsrMerShp usrMerShp = new UsrMerShp();
            usrMerShp.ShpId = shpId;
            return usrMerShp;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShpId
        {
            get
            {
                return _ShpId;
            }
            set
            {
                if (_ShpId != value)
                {
                    OnShpIdChanging(value);
                    ReportPropertyChanging("ShpId");
                    _ShpId = StructuralObject.SetValidValue(value, "ShpId");
                    ReportPropertyChanged("ShpId");
                    OnShpIdChanged();
                }
            }
        }
        private global::System.Int32 _ShpId;
        partial void OnShpIdChanging(global::System.Int32 value);
        partial void OnShpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShpName
        {
            get
            {
                return _ShpName;
            }
            set
            {
                OnShpNameChanging(value);
                ReportPropertyChanging("ShpName");
                _ShpName = StructuralObject.SetValidValue(value, true, "ShpName");
                ReportPropertyChanged("ShpName");
                OnShpNameChanged();
            }
        }
        private global::System.String _ShpName;
        partial void OnShpNameChanging(global::System.String value);
        partial void OnShpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value, "DateStart");
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStart;
        partial void OnDateStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShp_UsrMer", "UsrMer")]
        public UsrMer UsrMer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsrMerShp_UsrMer", "UsrMer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsrMerShp_UsrMer", "UsrMer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMer> UsrMerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsrMerShp_UsrMer", "UsrMer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMer>("ECOMM_C2C_SUBModel.FK_UsrMerShp_UsrMer", "UsrMer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShpPro")]
        public EntityCollection<UsrMerShpPro> UsrMerShpPro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShpPro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShpPro", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMerShpPro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMerShpPro : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMerShpPro object.
        /// </summary>
        /// <param name="shpId">Initial value of the ShpId property.</param>
        /// <param name="proId">Initial value of the ProId property.</param>
        public static UsrMerShpPro CreateUsrMerShpPro(global::System.Int32 shpId, global::System.Int32 proId)
        {
            UsrMerShpPro usrMerShpPro = new UsrMerShpPro();
            usrMerShpPro.ShpId = shpId;
            usrMerShpPro.ProId = proId;
            return usrMerShpPro;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShpId
        {
            get
            {
                return _ShpId;
            }
            set
            {
                if (_ShpId != value)
                {
                    OnShpIdChanging(value);
                    ReportPropertyChanging("ShpId");
                    _ShpId = StructuralObject.SetValidValue(value, "ShpId");
                    ReportPropertyChanged("ShpId");
                    OnShpIdChanged();
                }
            }
        }
        private global::System.Int32 _ShpId;
        partial void OnShpIdChanging(global::System.Int32 value);
        partial void OnShpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProId
        {
            get
            {
                return _ProId;
            }
            set
            {
                if (_ProId != value)
                {
                    OnProIdChanging(value);
                    ReportPropertyChanging("ProId");
                    _ProId = StructuralObject.SetValidValue(value, "ProId");
                    ReportPropertyChanged("ProId");
                    OnProIdChanged();
                }
            }
        }
        private global::System.Int32 _ProId;
        partial void OnProIdChanging(global::System.Int32 value);
        partial void OnProIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProQuantity
        {
            get
            {
                return _ProQuantity;
            }
            set
            {
                OnProQuantityChanging(value);
                ReportPropertyChanging("ProQuantity");
                _ProQuantity = StructuralObject.SetValidValue(value, "ProQuantity");
                ReportPropertyChanged("ProQuantity");
                OnProQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _ProQuantity;
        partial void OnProQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnProQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOutOfStock
        {
            get
            {
                return _IsOutOfStock;
            }
            set
            {
                OnIsOutOfStockChanging(value);
                ReportPropertyChanging("IsOutOfStock");
                _IsOutOfStock = StructuralObject.SetValidValue(value, "IsOutOfStock");
                ReportPropertyChanged("IsOutOfStock");
                OnIsOutOfStockChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOutOfStock;
        partial void OnIsOutOfStockChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOutOfStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, "Unit");
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private Nullable<global::System.Int32> _Unit;
        partial void OnUnitChanging(Nullable<global::System.Int32> value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProName
        {
            get
            {
                return _ProName;
            }
            set
            {
                OnProNameChanging(value);
                ReportPropertyChanging("ProName");
                _ProName = StructuralObject.SetValidValue(value, true, "ProName");
                ReportPropertyChanged("ProName");
                OnProNameChanged();
            }
        }
        private global::System.String _ProName;
        partial void OnProNameChanging(global::System.String value);
        partial void OnProNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Img
        {
            get
            {
                return _Img;
            }
            set
            {
                OnImgChanging(value);
                ReportPropertyChanging("Img");
                _Img = StructuralObject.SetValidValue(value, true, "Img");
                ReportPropertyChanged("Img");
                OnImgChanged();
            }
        }
        private global::System.String _Img;
        partial void OnImgChanging(global::System.String value);
        partial void OnImgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true, "Desc");
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, true, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PriceAfter
        {
            get
            {
                return _PriceAfter;
            }
            set
            {
                OnPriceAfterChanging(value);
                ReportPropertyChanging("PriceAfter");
                _PriceAfter = StructuralObject.SetValidValue(value, true, "PriceAfter");
                ReportPropertyChanged("PriceAfter");
                OnPriceAfterChanged();
            }
        }
        private global::System.String _PriceAfter;
        partial void OnPriceAfterChanging(global::System.String value);
        partial void OnPriceAfterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEdit
        {
            get
            {
                return _DateEdit;
            }
            set
            {
                OnDateEditChanging(value);
                ReportPropertyChanging("DateEdit");
                _DateEdit = StructuralObject.SetValidValue(value, "DateEdit");
                ReportPropertyChanged("DateEdit");
                OnDateEditChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEdit;
        partial void OnDateEditChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEditChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrCusCartDet")]
        public EntityCollection<UsrCusCartDet> UsrCusCartDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrCusCartDet>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrCusCartDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrCusCartDet>("ECOMM_C2C_SUBModel.FK_UsersCustomersCartsDetails_UsersMerchantsShopsProducts", "UsrCusCartDet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShp")]
        public UsrMerShp UsrMerShp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShp>("ECOMM_C2C_SUBModel.FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShp>("ECOMM_C2C_SUBModel.FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShp> UsrMerShpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShp>("ECOMM_C2C_SUBModel.FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShp>("ECOMM_C2C_SUBModel.FK_UsersMerchantsShopsProducts_UsersMerchantsShops", "UsrMerShp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpPro_Brand", "UsrMerShpProBrand")]
        public UsrMerShpProBrand UsrMerShpProBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProBrand>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_Brand", "UsrMerShpProBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProBrand>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_Brand", "UsrMerShpProBrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShpProBrand> UsrMerShpProBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProBrand>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_Brand", "UsrMerShpProBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShpProBrand>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_Brand", "UsrMerShpProBrand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpProCat")]
        public UsrMerShpProCat UsrMerShpProCat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProCat>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpProCat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProCat>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpProCat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShpProCat> UsrMerShpProCatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProCat>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpProCat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShpProCat>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpProCat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpProDet")]
        public UsrMerShpProDet UsrMerShpProDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpProDet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpProDet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShpProDet> UsrMerShpProDetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpProDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpProDet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "RcptBuyDet", "RcptBuy")]
        public EntityCollection<RcptBuy> RcptBuy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RcptBuy>("ECOMM_C2C_SUBModel.RcptBuyDet", "RcptBuy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RcptBuy>("ECOMM_C2C_SUBModel.RcptBuyDet", "RcptBuy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMerShpProBrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMerShpProBrand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMerShpProBrand object.
        /// </summary>
        /// <param name="brandId">Initial value of the BrandId property.</param>
        public static UsrMerShpProBrand CreateUsrMerShpProBrand(global::System.Int32 brandId)
        {
            UsrMerShpProBrand usrMerShpProBrand = new UsrMerShpProBrand();
            usrMerShpProBrand.BrandId = brandId;
            return usrMerShpProBrand;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                if (_BrandId != value)
                {
                    OnBrandIdChanging(value);
                    ReportPropertyChanging("BrandId");
                    _BrandId = StructuralObject.SetValidValue(value, "BrandId");
                    ReportPropertyChanged("BrandId");
                    OnBrandIdChanged();
                }
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, true, "BrandName");
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpPro_Brand", "UsrMerShpPro")]
        public EntityCollection<UsrMerShpPro> UsrMerShpPro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_Brand", "UsrMerShpPro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_Brand", "UsrMerShpPro", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMerShpProCat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMerShpProCat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMerShpProCat object.
        /// </summary>
        /// <param name="catId">Initial value of the CatId property.</param>
        public static UsrMerShpProCat CreateUsrMerShpProCat(global::System.Int32 catId)
        {
            UsrMerShpProCat usrMerShpProCat = new UsrMerShpProCat();
            usrMerShpProCat.CatId = catId;
            return usrMerShpProCat;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatId
        {
            get
            {
                return _CatId;
            }
            set
            {
                if (_CatId != value)
                {
                    OnCatIdChanging(value);
                    ReportPropertyChanging("CatId");
                    _CatId = StructuralObject.SetValidValue(value, "CatId");
                    ReportPropertyChanged("CatId");
                    OnCatIdChanged();
                }
            }
        }
        private global::System.Int32 _CatId;
        partial void OnCatIdChanging(global::System.Int32 value);
        partial void OnCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CatName
        {
            get
            {
                return _CatName;
            }
            set
            {
                OnCatNameChanging(value);
                ReportPropertyChanging("CatName");
                _CatName = StructuralObject.SetValidValue(value, true, "CatName");
                ReportPropertyChanged("CatName");
                OnCatNameChanged();
            }
        }
        private global::System.String _CatName;
        partial void OnCatNameChanging(global::System.String value);
        partial void OnCatNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEdit
        {
            get
            {
                return _DateEdit;
            }
            set
            {
                OnDateEditChanging(value);
                ReportPropertyChanging("DateEdit");
                _DateEdit = StructuralObject.SetValidValue(value, "DateEdit");
                ReportPropertyChanged("DateEdit");
                OnDateEditChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEdit;
        partial void OnDateEditChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEditChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpPro")]
        public EntityCollection<UsrMerShpPro> UsrMerShpPro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpPro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpPro_UsrMerShpProCat", "UsrMerShpPro", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMerShpProColor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMerShpProColor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMerShpProColor object.
        /// </summary>
        /// <param name="colorId">Initial value of the ColorId property.</param>
        public static UsrMerShpProColor CreateUsrMerShpProColor(global::System.Int32 colorId)
        {
            UsrMerShpProColor usrMerShpProColor = new UsrMerShpProColor();
            usrMerShpProColor.ColorId = colorId;
            return usrMerShpProColor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorId
        {
            get
            {
                return _ColorId;
            }
            set
            {
                if (_ColorId != value)
                {
                    OnColorIdChanging(value);
                    ReportPropertyChanging("ColorId");
                    _ColorId = StructuralObject.SetValidValue(value, "ColorId");
                    ReportPropertyChanged("ColorId");
                    OnColorIdChanged();
                }
            }
        }
        private global::System.Int32 _ColorId;
        partial void OnColorIdChanging(global::System.Int32 value);
        partial void OnColorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColorName
        {
            get
            {
                return _ColorName;
            }
            set
            {
                OnColorNameChanging(value);
                ReportPropertyChanging("ColorName");
                _ColorName = StructuralObject.SetValidValue(value, true, "ColorName");
                ReportPropertyChanged("ColorName");
                OnColorNameChanged();
            }
        }
        private global::System.String _ColorName;
        partial void OnColorNameChanging(global::System.String value);
        partial void OnColorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColorImg
        {
            get
            {
                return _ColorImg;
            }
            set
            {
                OnColorImgChanging(value);
                ReportPropertyChanging("ColorImg");
                _ColorImg = StructuralObject.SetValidValue(value, true, "ColorImg");
                ReportPropertyChanged("ColorImg");
                OnColorImgChanged();
            }
        }
        private global::System.String _ColorImg;
        partial void OnColorImgChanging(global::System.String value);
        partial void OnColorImgChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProDet")]
        public EntityCollection<UsrMerShpProDet> UsrMerShpProDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProDet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMerShpProDet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMerShpProDet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMerShpProDet object.
        /// </summary>
        /// <param name="shpId">Initial value of the ShpId property.</param>
        /// <param name="proId">Initial value of the ProId property.</param>
        public static UsrMerShpProDet CreateUsrMerShpProDet(global::System.Int32 shpId, global::System.Int32 proId)
        {
            UsrMerShpProDet usrMerShpProDet = new UsrMerShpProDet();
            usrMerShpProDet.ShpId = shpId;
            usrMerShpProDet.ProId = proId;
            return usrMerShpProDet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShpId
        {
            get
            {
                return _ShpId;
            }
            set
            {
                if (_ShpId != value)
                {
                    OnShpIdChanging(value);
                    ReportPropertyChanging("ShpId");
                    _ShpId = StructuralObject.SetValidValue(value, "ShpId");
                    ReportPropertyChanged("ShpId");
                    OnShpIdChanged();
                }
            }
        }
        private global::System.Int32 _ShpId;
        partial void OnShpIdChanging(global::System.Int32 value);
        partial void OnShpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProId
        {
            get
            {
                return _ProId;
            }
            set
            {
                if (_ProId != value)
                {
                    OnProIdChanging(value);
                    ReportPropertyChanging("ProId");
                    _ProId = StructuralObject.SetValidValue(value, "ProId");
                    ReportPropertyChanged("ProId");
                    OnProIdChanged();
                }
            }
        }
        private global::System.Int32 _ProId;
        partial void OnProIdChanging(global::System.Int32 value);
        partial void OnProIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpPro")]
        public UsrMerShpPro UsrMerShpPro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpPro").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpPro").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShpPro> UsrMerShpProReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpPro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShpPro>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpPro", "UsrMerShpPro", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProColor")]
        public UsrMerShpProColor UsrMerShpProColor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProColor>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProColor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProColor>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProColor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShpProColor> UsrMerShpProColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProColor>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProColor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShpProColor>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProColor", "UsrMerShpProColor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProSize")]
        public UsrMerShpProSize UsrMerShpProSize
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProSize>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProSize>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMerShpProSize> UsrMerShpProSizeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMerShpProSize>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMerShpProSize>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProSize", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMerShpProSize")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMerShpProSize : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMerShpProSize object.
        /// </summary>
        /// <param name="sizeId">Initial value of the SizeId property.</param>
        public static UsrMerShpProSize CreateUsrMerShpProSize(global::System.Int32 sizeId)
        {
            UsrMerShpProSize usrMerShpProSize = new UsrMerShpProSize();
            usrMerShpProSize.SizeId = sizeId;
            return usrMerShpProSize;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SizeId
        {
            get
            {
                return _SizeId;
            }
            set
            {
                if (_SizeId != value)
                {
                    OnSizeIdChanging(value);
                    ReportPropertyChanging("SizeId");
                    _SizeId = StructuralObject.SetValidValue(value, "SizeId");
                    ReportPropertyChanged("SizeId");
                    OnSizeIdChanged();
                }
            }
        }
        private global::System.Int32 _SizeId;
        partial void OnSizeIdChanging(global::System.Int32 value);
        partial void OnSizeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SizeName
        {
            get
            {
                return _SizeName;
            }
            set
            {
                OnSizeNameChanging(value);
                ReportPropertyChanging("SizeName");
                _SizeName = StructuralObject.SetValidValue(value, true, "SizeName");
                ReportPropertyChanged("SizeName");
                OnSizeNameChanged();
            }
        }
        private global::System.String _SizeName;
        partial void OnSizeNameChanging(global::System.String value);
        partial void OnSizeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SizeImg
        {
            get
            {
                return _SizeImg;
            }
            set
            {
                OnSizeImgChanging(value);
                ReportPropertyChanging("SizeImg");
                _SizeImg = StructuralObject.SetValidValue(value, true, "SizeImg");
                ReportPropertyChanged("SizeImg");
                OnSizeImgChanged();
            }
        }
        private global::System.String _SizeImg;
        partial void OnSizeImgChanging(global::System.String value);
        partial void OnSizeImgChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProDet")]
        public EntityCollection<UsrMerShpProDet> UsrMerShpProDet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProDet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMerShpProDet>("ECOMM_C2C_SUBModel.FK_UsrMerShpProDet_UsrMerShpProSize", "UsrMerShpProDet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMstr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMstr : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMstr object.
        /// </summary>
        /// <param name="mstrId">Initial value of the MstrId property.</param>
        public static UsrMstr CreateUsrMstr(global::System.Int32 mstrId)
        {
            UsrMstr usrMstr = new UsrMstr();
            usrMstr.MstrId = mstrId;
            return usrMstr;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MstrId
        {
            get
            {
                return _MstrId;
            }
            set
            {
                if (_MstrId != value)
                {
                    OnMstrIdChanging(value);
                    ReportPropertyChanging("MstrId");
                    _MstrId = StructuralObject.SetValidValue(value, "MstrId");
                    ReportPropertyChanged("MstrId");
                    OnMstrIdChanged();
                }
            }
        }
        private global::System.Int32 _MstrId;
        partial void OnMstrIdChanging(global::System.Int32 value);
        partial void OnMstrIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMstr_Usr", "Usr")]
        public Usr Usr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "Usr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "Usr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usr> UsrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "Usr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usr>("ECOMM_C2C_SUBModel.FK_UsrMstr_Usr", "Usr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMstr_UsrMstrRole", "UsrMstrRole")]
        public UsrMstrRole UsrMstrRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMstrRole>("ECOMM_C2C_SUBModel.FK_UsrMstr_UsrMstrRole", "UsrMstrRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMstrRole>("ECOMM_C2C_SUBModel.FK_UsrMstr_UsrMstrRole", "UsrMstrRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsrMstrRole> UsrMstrRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsrMstrRole>("ECOMM_C2C_SUBModel.FK_UsrMstr_UsrMstrRole", "UsrMstrRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsrMstrRole>("ECOMM_C2C_SUBModel.FK_UsrMstr_UsrMstrRole", "UsrMstrRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ECOMM_C2C_SUBModel", Name="UsrMstrRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsrMstrRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsrMstrRole object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UsrMstrRole CreateUsrMstrRole(global::System.Int32 roleId)
        {
            UsrMstrRole usrMstrRole = new UsrMstrRole();
            usrMstrRole.RoleId = roleId;
            return usrMstrRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ECOMM_C2C_SUBModel", "FK_UsrMstr_UsrMstrRole", "UsrMstr")]
        public EntityCollection<UsrMstr> UsrMstr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsrMstr>("ECOMM_C2C_SUBModel.FK_UsrMstr_UsrMstrRole", "UsrMstr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsrMstr>("ECOMM_C2C_SUBModel.FK_UsrMstr_UsrMstrRole", "UsrMstr", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
